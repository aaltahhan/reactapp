{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Asmaa\\\\Downloads\\\\reactapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Asmaa\\\\Downloads\\\\reactapp\\\\src\\\\components\\\\lscounters.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport MyCounter from './mycounter';\n\nclass LstCounters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        name: \" React JS vs Angular\",\n        value: 0\n      }, {\n        id: 2,\n        name: \"ASP.NET Core or Node JS\",\n        value: 0\n      }, {\n        id: 3,\n        name: \"Lifecycle of React JS Components\",\n        value: 0\n      }, {\n        id: 4,\n        name: \"Comparing JavaScript Libraries/Frameworks\",\n        value: 0\n      }]\n    };\n\n    this.handleAddButton = counter => {\n      const tempcounters = [...this.state.counters];\n      const i = tempcounters.indexOf(counter);\n      tempcounters[i] = _objectSpread({}, counter);\n      tempcounters[i].value++;\n      this.setState({\n        counters: tempcounters\n      });\n    };\n\n    this.handleDeleteButton = countersId => {\n      const tempcounters = this.state.counters.filter(c => c.id !== countersId);\n      this.setState({\n        counters: tempcounters\n      });\n    };\n\n    this.handleClearCounters = () => {\n      const tempcounters = this.state.counters.map(ct => {\n        ct.value = 0;\n        return ct;\n      });\n      this.setState({\n        counters: tempcounters\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm m-3\",\n      onClick: this.handleClearCounters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Clear Counters\"), this.state.counters.map(counter => React.createElement(MyCounter, {\n      key: counter.id,\n      counter: counter,\n      onDelete: this.handleDeleteButton,\n      onIncrement: this.handleAddButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default LstCounters;","map":{"version":3,"sources":["C:/Users/Asmaa/Downloads/reactapp/src/components/lscounters.jsx"],"names":["React","Component","MyCounter","LstCounters","state","counters","id","name","value","handleAddButton","counter","tempcounters","i","indexOf","setState","handleDeleteButton","countersId","filter","c","handleClearCounters","map","ct","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCG,KADgC,GACxB;AACJC,MAAAA,QAAQ,EAAE,CACP;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAOC,QAAAA,IAAI,EAAE,sBAAb;AAAqCC,QAAAA,KAAK,EAAC;AAA3C,OADO,EAElB;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE,yBAAd;AAA0CC,QAAAA,KAAK,EAAC;AAAhD,OAFkB,EAGlB;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE,kCAAd;AAAkDC,QAAAA,KAAK,EAAE;AAAzD,OAHkB,EAIlB;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE,2CAAd;AAA2DC,QAAAA,KAAK,EAAC;AAAjE,OAJkB;AADN,KADwB;;AAAA,SAUhCC,eAVgC,GAUdC,OAAO,IAAI;AACzB,YAAMC,YAAY,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWC,QAAf,CAArB;AACA,YAAMO,CAAC,GAAGD,YAAY,CAACE,OAAb,CAAqBH,OAArB,CAAV;AACAC,MAAAA,YAAY,CAACC,CAAD,CAAZ,qBAAuBF,OAAvB;AACAC,MAAAA,YAAY,CAACC,CAAD,CAAZ,CAAgBJ,KAAhB;AACA,WAAKM,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEM;AAAZ,OAAd;AACH,KAhB+B;;AAAA,SAkBhCI,kBAlBgC,GAkBVC,UAAD,IAAgB;AACjC,YAAML,YAAY,GAAG,KAAKP,KAAL,CAAWC,QAAX,CAAoBY,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACZ,EAAF,KAASU,UAAzC,CAArB;AACA,WAAKF,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEM;AAAZ,OAAd;AACH,KArB+B;;AAAA,SAuBhCQ,mBAvBgC,GAuBV,MAAM;AACxB,YAAMR,YAAY,GAAG,KAAKP,KAAL,CAAWC,QAAX,CAAoBe,GAApB,CAAwBC,EAAE,IAAI;AAC/CA,QAAAA,EAAE,CAACb,KAAH,GAAW,CAAX;AACA,eAAOa,EAAP;AACH,OAHoB,CAArB;AAIA,WAAKP,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEM;AAAZ,OAAd;AACH,KA7B+B;AAAA;;AA+BhCW,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEJ;AAAQ,MAAA,SAAS,EAAC,4BAAlB;AAA+C,MAAA,OAAO,EAAE,KAAKH,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFI,EAGH,KAAKf,KAAL,CAAWC,QAAX,CAAoBe,GAApB,CAAwBV,OAAO,IAC3B,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,OAAO,CAACJ,EAAxB;AAA4B,MAAA,OAAO,EAAEI,OAArC;AAA8C,MAAA,QAAQ,EAAE,KAAKK,kBAA7D;AAAiF,MAAA,WAAW,EAAE,KAAKN,eAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHG,CAAR;AAOH;;AAvC+B;;AA0CpC,eAAeN,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport MyCounter from './mycounter';\r\n\r\nclass LstCounters extends Component {\r\n    state = {\r\n        counters: [\r\n           {id: 1,name: \" React JS vs Angular\", value:0}, \r\n{id: 2, name: \"ASP.NET Core or Node JS\" , value:0}, \r\n{id: 3, name: \"Lifecycle of React JS Components\", value :0 }, \r\n{id: 4, name: \"Comparing JavaScript Libraries/Frameworks\", value:0}\r\n        ]\r\n    };\r\n\r\n    handleAddButton = counter => {\r\n        const tempcounters = [...this.state.counters];\r\n        const i = tempcounters.indexOf(counter);\r\n        tempcounters[i] = { ...counter };\r\n        tempcounters[i].value++;\r\n        this.setState({ counters: tempcounters });\r\n    };\r\n\r\n    handleDeleteButton = (countersId) => {\r\n        const tempcounters = this.state.counters.filter(c => c.id !== countersId);\r\n        this.setState({ counters: tempcounters });\r\n    };\r\n\r\n    handleClearCounters = () => {\r\n        const tempcounters = this.state.counters.map(ct => {\r\n            ct.value = 0;\r\n            return ct;\r\n        });\r\n        this.setState({ counters: tempcounters })\r\n    };\r\n\r\n    render() {\r\n        return (<div>\r\n\r\n            <button className=\"btn btn-primary btn-sm m-3\" onClick={this.handleClearCounters}>Clear Counters</button>\r\n            {this.state.counters.map(counter =>\r\n                (<MyCounter key={counter.id} counter={counter} onDelete={this.handleDeleteButton} onIncrement={this.handleAddButton} />))}\r\n\t\t\t\t\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default LstCounters;"]},"metadata":{},"sourceType":"module"}